<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 开启springmvc容器的自动扫描功能，默认情况下：会扫描@Controller，@Service,@Repository,@Component,
	但是springmvc容器，只需要管理WEB层的组件，需要将@Service,@Repository过滤掉
	 -->
	<context:component-scan base-package="com.third.autoloan">
	
		<!-- 在自动扫描过滤中，如果扫描到使用了@Service，@Repository的JAVA类，
		将不会让他们纳入到springmvc容器中来 
		进行管理 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		
		<!-- 容器过滤器的类型有：annotation 注解过滤器
		assignable 类型过滤器，例如：expression="org.framestudy.springmvcannotation.sysmag.service.IUserService"
		aspectj 切面过滤器，例如：expression="org.framestudy.springmvcannotation.aspects.LogAspect"
		regex 正则过滤器
		 -->
	</context:component-scan>
	
	<!-- 开启springmvc注解支持 -->
	<mvc:annotation-driven conversion-service="converterFactory" />
	
	<!-- 开启springmvc注解支持之后，
	不需要再配置HandleMapping，HandleAdapter，因为默认会采用：
		AnnotationMethodHandlerAdapter
		DefaultAnnotationHandlerMapping
		如个需要使用验证服务，需要添加validator="localValidatorFactoryBean"
	 -->
	<bean id="converterFactory" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="hxf.myspring.converter.GlobalUtilDateConverter"></bean>		
			</set>		
		</property>
	</bean>
	
	<!-- 定义静态资源包，目的是：为了告诉前端控制器，凡是请求路径，满足/static/**格式的请求，均不需要
	到HandlerMapping中去查找映射关系，而是直接应该从对应的目录读取即可。 -->
	<mvc:resources location="/static/" mapping="/static/**"></mvc:resources>
	
	<!-- 配置拦截器链 -->
	<!-- <mvc:interceptors> -->
	
		<!-- 如果拦截器，直接定义在mvc:interceptors 下方，表示所有的请求都需要执行该拦截器
			<bean class="org.framestudy.springmvcannotation.sysmag.interceptor.FirstInterceptor"></bean>
		-->
	
		<!-- 拦截器可以针对/files/upload2固定的请求，来进行拦截 ,也可以写成/files/*  /files/upload?-->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/files/*"/>
			<bean class="org.framestudy.springmvcannotation.sysmag.interceptor.FirstInterceptor"></bean>
		</mvc:interceptor>
	
		<mvc:interceptor>
			<mvc:mapping path="/files/*"/>
			<bean class="org.framestudy.springmvcannotation.sysmag.interceptor.SecondInterceptor"></bean>
		</mvc:interceptor> -->
	
	<!-- </mvc:interceptors> -->
	
	
	
	<!-- 如果要搜索国际化编码：百度搜索：ISO 语言  国家 -->
	<!-- ResourceBundleMessageSource 指定spring容器默认采用哪种语言来进行数据显示 -->
	<!-- <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messager_zh_CN"></property>
	</bean> -->
	
	
	<!-- 声明springmvc的验证框架工厂类，工厂类的作用 ：产生hibernate验证实例 -->
	<!-- <bean id="localValidatorFactoryBean" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator"></property>
	</bean> -->
	
	<!-- 文件上传解析器,multipartResolver为固定ID，不可以修改 -->
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		
		maxUploadSize 文件上传过程中，所有文件的最大容量，单位是byte，当设置为-1时，表示不做限制
		<property name="maxUploadSize" value="104857600"></property>100M
		
		maxUploadSizePerFile 文件上传过程中，单个文件的最大容量，单位是byte，当设置为-1时，表示不做限制
		<property name="maxUploadSizePerFile" value="10485760"></property>10M
		
		defaultEncoding 设置文件上传过程中，采用字符集
		<property name="defaultEncoding" value="utf-8"></property>
		
		maxInMemorySize 设置每次读取文件时，能够读取的最大容量，===  byte[] bytes = new byte[1024];
		<property name="maxInMemorySize" value="10240"></property>
	</bean> -->
	
	<!-- 配置视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<property name="prefix" value="/"></property>  <!-- /layout/main -->
		<property name="suffix" value=".jsp"></property> <!-- /layout/main.jsp -->
	</bean>


</beans>